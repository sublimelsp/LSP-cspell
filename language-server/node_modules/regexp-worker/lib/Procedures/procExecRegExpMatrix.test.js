"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const procExecRegExpMatrix_1 = require("./procExecRegExpMatrix");
const uniqueId_1 = require("./uniqueId");
describe('procExecRegExpMatrix', () => {
    test('basic', () => {
        const req = (0, procExecRegExpMatrix_1.createRequestExecRegExpMatrix)({ textArray: ['two words'], regExpArray: [/w\w+/g] });
        const result = (0, procExecRegExpMatrix_1.procExecRegExpMatrix)(req);
        expect((0, procExecRegExpMatrix_1.isExecRegExpMatrixResponse)(result)).toBe(true);
        const response = (0, procExecRegExpMatrix_1.isExecRegExpMatrixResponse)(result) ? result : undefined;
        expect(response === null || response === void 0 ? void 0 : response.data.elapsedTimeMs).toBeGreaterThan(0);
        expect(response === null || response === void 0 ? void 0 : response.data.matrix).toHaveLength(1);
        expect(response === null || response === void 0 ? void 0 : response.data.matrix[0].results[0].matches.map((m) => m[0])).toEqual(['wo', 'words']);
    });
    test('non-RequestExecRegExpMatrix', () => {
        const req = { id: (0, uniqueId_1.createId)(), requestType: 'unknown', data: { text: 'two words', regexp: /w\w+/g } };
        const result = (0, procExecRegExpMatrix_1.procExecRegExpMatrix)(req);
        expect((0, procExecRegExpMatrix_1.isExecRegExpMatrixResponse)(result)).toBe(false);
        expect(result).toBeUndefined();
    });
});
//# sourceMappingURL=procExecRegExpMatrix.test.js.map