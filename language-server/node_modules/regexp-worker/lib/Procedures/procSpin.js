"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createResponseSpin = exports.createRequestSpin = exports.procSpin = exports.isSpinResponse = exports.isSpinRequest = exports.typeSpin = void 0;
const procedure_1 = require("./procedure");
const timer_1 = require("../timer");
exports.typeSpin = 'Spin';
exports.isSpinRequest = (0, procedure_1.genIsRequest)(exports.typeSpin);
exports.isSpinResponse = (0, procedure_1.genIsResponse)(exports.typeSpin);
function procSpin(r) {
    if (!(0, exports.isSpinRequest)(r))
        return undefined;
    if (!isValid(r)) {
        return Promise.resolve((0, procedure_1.createErrorResponse)(r, 'Empty Spin Duration'));
    }
    return new Promise((resolve) => {
        const { durationMs } = r.data;
        let elapsedTimeMs = 0;
        let count = 0;
        let n = 0.001;
        const startTime = process.hrtime();
        while ((elapsedTimeMs = (0, timer_1.hrTimeToMs)(process.hrtime(startTime))) < durationMs) {
            count++;
            n = Math.sqrt(n) / 2;
        }
        const response = createResponseSpin(r, {
            elapsedTimeMs,
            count,
        });
        resolve(response);
    });
}
exports.procSpin = procSpin;
function createRequestSpin(data) {
    data = typeof data === 'number' ? { durationMs: data } : data;
    return (0, procedure_1.createRequest)(exports.typeSpin, data);
}
exports.createRequestSpin = createRequestSpin;
function createResponseSpin(request, data) {
    return (0, procedure_1.createResponse)(request.id, request.requestType, data);
}
exports.createResponseSpin = createResponseSpin;
function isValid(request) {
    return !!(request.data && typeof request.data.durationMs === 'number');
}
//# sourceMappingURL=procSpin.js.map