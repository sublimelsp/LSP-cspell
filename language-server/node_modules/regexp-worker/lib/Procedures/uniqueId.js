"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NullID = exports.isId = exports.createId = void 0;
let id = process.hrtime()[0];
/**
 * Gets a unique ID for each call.
 * Note: a UUID would be the "correct" solution, but this will work for our purposes.
 * Give that, this is more complex than it needs to be.
 */
function createId() {
    ++id;
    const t = process.hrtime();
    const v = id ^ t[0] ^ t[1];
    const a = ('0' + (v % 13)).slice(-2);
    const b = v;
    const c = id;
    const d = (c + b) % 7;
    return `ID-${a}-${b}-${c}-${d}`;
}
exports.createId = createId;
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
function isId(value) {
    if (typeof value === 'string' && /^ID-\d+-\d+-\d+-\d+$/.test(value)) {
        const [a, b, c, d] = value
            .split('-')
            .slice(1)
            .map((v) => Number.parseInt(v, 10));
        return a === b % 13 && d === (b + c) % 7;
    }
    return false;
}
exports.isId = isId;
exports.NullID = 'ID-0-0-0-0';
//# sourceMappingURL=uniqueId.js.map