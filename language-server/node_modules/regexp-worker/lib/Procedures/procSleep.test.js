"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const procSleep_1 = require("./procSleep");
const uniqueId_1 = require("./uniqueId");
const timer_1 = require("../timer");
describe('Sleep', () => {
    test('isA', () => {
        expect((0, procSleep_1.isSleepRequest)({})).toBe(false);
        expect((0, procSleep_1.isSleepRequest)({ id: (0, uniqueId_1.createId)(), requestType: 'Sleep' })).toBe(true);
    });
    test('Sleep for 5ms', async () => {
        const req = (0, procSleep_1.createRequestSleep)({ durationMs: 5 });
        const m = await (0, timer_1.measurePromise)(() => (0, procSleep_1.procSleep)(req));
        const r = m.r;
        expect(r.id).toBe(req.id);
        expect(r.responseType).toBe('Sleep');
        expect(r.data).toEqual(req.data);
        // Note Node.js timers are not accurate, so it is possible it can finish faster than expected.
        expect(m.elapsedTimeMs).toBeGreaterThan(req.data.durationMs - 2);
    });
    test('Sleep for -5ms', async () => {
        const req = { id: (0, uniqueId_1.createId)(), requestType: 'Sleep' };
        const m = await (0, timer_1.measurePromise)(() => (0, procSleep_1.procSleep)(req));
        const r = m.r;
        expect(r.id).toBe(req.id);
        expect(r.responseType).toBe('Error');
    });
});
//# sourceMappingURL=procSleep.test.js.map